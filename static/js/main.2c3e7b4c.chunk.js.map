{"version":3,"sources":["Components/SearchBar.js","Components/DropdownInput.js","Components/InfoBox.js","Utils/StringFunctions.js","Classes/Pokemon.js","Services/PokemonAPI.js","Pages/Pokedex.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","inputElement","buttonText","placeholder","type","onclick","className","ref","input","onClick","value","DropdownInput","choices","keyPrefix","label","setValue","useState","map","v","text","choicesState","useEffect","onChange","e","target","i","key","InfoBox","title","content","capitalizeString","string","toUpperCase","substring","toLocaleLowerCase","capitalizeAllWords","split","word","join","replaceAll","replacedSubstring","newSubstring","substrings","replacedString","length","useAorAn","firstLetter","toLowerCase","startsWithVogal","Pokemon","reqObj","this","_info","typeImages","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","language","console","log","name","species","names","includes","pokemon","id","types","img","stats","result","forEach","obj","base_stat","stat","push","entries","flavor_text_entries","flavor_text","version","getAllPokedexEntries","sorted","moveNames","moves","move","version_group_details","group","gameGroupName","version_group","move_learn_method","method","level","level_learned_at","Object","keys","sort","a","b","hasPreEvolution","evolves_from_species","url","getImage","thisPokemon","loop","root","evolves_to","evolutionLine","chain","methodByName","evolution_details","p","pName","path","trigger","getEvolutions","base_url","Pokedex","defaultPokemonState","image","hasEvolution","evolution","evolution_method","minor","pokemonInfo","set_pokemonInfo","gameSelectValue","set_gameSelectValue","evolutionNav","set_evolutionNav","isLoading","set_isLoading","hasError","set_hasError","searchPokemon","searchValue","pokemonId","onStart","onSuccess","onError","Promise","all","superagent","get","then","pokemonRes","speciesRes","body","evolution_chain","res","catch","err","statusCode","getPokemon","data","getDisplayName","getMoves","preEvolution","getPreEvolution","getTypes","getEvolutionTriggers","getStats","height","weight","shape","generation","habitat","src","alt","habita","toString","slice","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2c3e7b4c.chunk.js","sourcesContent":["//================================================================================\r\n// External:                                                                      \r\n//================================================================================\r\nimport React from 'react';\r\n\r\n//================================================================================\r\n// Components:                                                                    \r\n//================================================================================\r\nexport default function SearchBar(props) {\r\n    var {\r\n        buttonText = '', \r\n        placeholder = '', \r\n        type = 'text', \r\n        onclick = () => {}\r\n    } = props;\r\n\r\n    var inputElement;\r\n\r\n    function handleInputRef(input) {\r\n        inputElement = input;\r\n    }\r\n\r\n    return (\r\n        <div className='searchBar'>\r\n            <input \r\n            ref={handleInputRef}\r\n            placeholder={placeholder} \r\n            type={type}\r\n            />\r\n\r\n            <button onClick={() => {onclick(inputElement.value)}}>{buttonText}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function DropdownInput(props) {\r\n    var {choices = [], keyPrefix = '', label='', setValue, value} = props;\r\n\r\n    const [ choicesState, set_choicesState ] = useState(\r\n        choices.map((v) => {\r\n        if(typeof v === 'object') return v;\r\n\r\n        return {text: v, value: v};\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setValue(choicesState[0].value);\r\n    }, [choicesState]);\r\n\r\n    function onChange(e) {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className='dropdownInput'>\r\n            {label !== '' ? <label>{label}</label> : null}\r\n            <select value={value} onChange={onChange}>\r\n                {\r\n                    choicesState.map((v, i) => {\r\n                        return <option value={v.value} key={`${keyPrefix}_${i}`}>{v.text}</option>\r\n                    })\r\n                }\r\n            </select>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './InfoBox.css';\r\n\r\nexport default function InfoBox(props) {\r\n    const { title = 'Title', content = null, className = '' } = props;\r\n\r\n    return (\r\n        <div className={`infoBox ${className}`}>\r\n            <div className='titleArea'>\r\n                <h3>{title}</h3>\r\n            </div>\r\n            <div className='contentArea'>\r\n                {\r\n                    content\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}","\r\nexport function capitalizeString(string = '') {\r\n    return string[0].toUpperCase() + string.substring(1).toLocaleLowerCase();\r\n}\r\n\r\nexport function capitalizeAllWords(string = '') {\r\n    return string.split(' ').map(word => capitalizeString(word)).join(' ');\r\n}\r\n\r\nexport function replaceAll(string = '', replacedSubstring, newSubstring) {\r\n    let substrings = string.split(replacedSubstring);\r\n    let replacedString = substrings[0];\r\n    for(var i = 1; i < substrings.length; i++) {\r\n        replacedString += newSubstring + substrings[i];\r\n    }\r\n    return replacedString;\r\n}\r\n\r\nexport function startsWithVogal(string) {\r\n    let firstLetter = string[0].toLowerCase();\r\n    \r\n    return (\r\n    firstLetter === 'a' ||\r\n    firstLetter === 'e' ||\r\n    firstLetter === 'i' ||\r\n    firstLetter === 'o' ||\r\n    firstLetter === 'u'\r\n    );\r\n}\r\n\r\nexport function useAorAn(string) {\r\n    if(startsWithVogal(string)) {\r\n        return 'an';\r\n    }\r\n\r\n    return 'a';\r\n}\r\n","//================================================================================\r\n// Utils:\r\n//================================================================================\r\nimport {capitalizeString, replaceAll, capitalizeAllWords, useAorAn} from '../Utils/StringFunctions';\r\n\r\nexport default class Pokemon {\r\n    constructor(reqObj) {\r\n        this._info = reqObj;\r\n        this.typeImages = {\r\n            normal: 'https://i.ibb.co/PF7wYJf/normal.png',\r\n            fighting: 'https://i.ibb.co/H7btCrQ/fighting.png',\r\n            flying: 'https://i.ibb.co/Bzv4DXk/flying.png',\r\n            poison: 'https://i.ibb.co/Rggf4h3/poison.png',\r\n            ground: 'https://i.ibb.co/FV5vh7D/ground.png',\r\n            rock: 'https://i.ibb.co/68rn0M7/rock.png',\r\n            bug: 'https://i.ibb.co/0hTtRns/bug.png', \r\n            ghost: 'https://i.ibb.co/K0tnCXb/ghost.png',\r\n            steel: 'https://i.ibb.co/6B849X5/steel.png',\r\n            fire: 'https://i.ibb.co/pdFQyQs/fire.png',\r\n            water: 'https://i.ibb.co/nCfgkps/water.png',\r\n            grass: 'https://i.ibb.co/DbPbyYy/grass.png',\r\n            electric: 'https://i.ibb.co/FnmvSFR/electric.png',\r\n            psychic: 'https://i.ibb.co/Mg3PzvN/psychic.png',\r\n            ice: 'https://i.ibb.co/Tk60FRM/ice.png',\r\n            dragon: 'https://i.ibb.co/tJjkNFG/dragon.png',\r\n            dark: 'https://i.ibb.co/0JT9CqP/dark.png',\r\n            fairy: 'https://i.ibb.co/gStBvMm/fairy.png',\r\n        }\r\n    }\r\n\r\n    getDisplayName(language = 'en') {\r\n        console.log(this)\r\n        let name = capitalizeAllWords(replaceAll(this._info.species.name, '-', ' '));\r\n\r\n        if(language !== 'en') {\r\n            for(let i = 0; i < this._info.species.names.length; i++) {\r\n                if(this._info.species.names[i].language.name.includes(language)) {\r\n                    name = this._info.species.names[i].name;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return capitalizeString(`${name} (${this._info.pokemon.id})`);\r\n    }\r\n\r\n    getImage(id = this._info.pokemon.id) {\r\n        return `https://cdn.traction.one/pokedex/pokemon/${id}.png`;\r\n    }\r\n\r\n    getTypes() {\r\n        return this._info.pokemon.types.map((v) => {\r\n            return { name: v.type.name, img: this.typeImages[v.type.name] };\r\n        })\r\n    }\r\n\r\n    getStats() {\r\n        let stats = this._info.pokemon.stats;\r\n        let result = [{}];\r\n\r\n        stats.forEach((v) => {\r\n            let obj = {};\r\n            obj.name = '';\r\n            obj.value = v.base_stat;\r\n\r\n            switch(v.stat.name) {\r\n                case 'hp':\r\n                    obj.name = 'HP';\r\n                    break;\r\n\r\n                case 'attack':\r\n                    obj.name = 'ATK';\r\n                    break;\r\n\r\n                case 'defense':\r\n                    obj.name = 'DEF';\r\n                    break;\r\n\r\n                case 'special-attack':\r\n                    obj.name = 'S.ATK';\r\n                    break;\r\n\r\n                case 'special-defense':\r\n                    obj.name = 'S.DEF';\r\n                    break;\r\n\r\n                case 'speed':\r\n                    obj.name = 'SPD';\r\n                    break;\r\n            }\r\n\r\n            if(v.stat.name !== 'hp') {\r\n                result.push(obj);\r\n            } else {\r\n                result[0] = obj;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    getAllPokedexEntries(language = 'en') {\r\n        let entries = [];\r\n\r\n        for(let i = 0; i < this._info.species.flavor_text_entries.length; i++) {\r\n            if(this._info.species.flavor_text_entries[i].language.name.includes(language)) {\r\n                \r\n                entries.push(replaceAll(replaceAll(this._info.species.flavor_text_entries[i].flavor_text, '\\f', ' '), '\\n', ' ') \r\n                + ` (${capitalizeAllWords(replaceAll(this._info.species.flavor_text_entries[i].version.name, '-', ' '))})`);\r\n            }\r\n        }\r\n\r\n        if(entries.length === 0) return this.getAllPokedexEntries('en');\r\n\r\n        return entries;   \r\n    }\r\n\r\n    // Objective: Loop through the moves and if they are adquired by leveling up and haven't\r\n    // already been added to the list, add them to the list. Loop through the list again, now\r\n    // adding the other types and making sure not to repeat them.\r\n\r\n    // Structure: Container Object => Game Group Object => Learning Method Array => Move Object {level, name}.\r\n    getMoves() {\r\n\r\n        let sorted = {};\r\n        let moveNames = {};\r\n\r\n        this._info.pokemon.moves.forEach((move) => {\r\n            \r\n            move.version_group_details.forEach((group) => {\r\n\r\n                let gameGroupName = capitalizeAllWords(replaceAll(group.version_group.name, '-', ' '));\r\n                let name = capitalizeAllWords(replaceAll(move.move.name, '-', ' '));\r\n                moveNames[gameGroupName] = moveNames[gameGroupName] || [];\r\n\r\n                if(group.move_learn_method.name === 'level-up' && !moveNames[gameGroupName].includes(name)) {\r\n                    \r\n                    let method = capitalizeAllWords(replaceAll(group.move_learn_method.name, '-', ' '));\r\n                    let level = group.level_learned_at;\r\n\r\n                    if(level < 1) {\r\n                        level = 1;\r\n                    }\r\n\r\n                    sorted[gameGroupName] = sorted[gameGroupName] || {};\r\n                    sorted[gameGroupName][method] = sorted[gameGroupName][method] || [];\r\n                    sorted[gameGroupName][method].push({name, level});\r\n                    moveNames[gameGroupName].push(name);\r\n                }\r\n            });\r\n        });\r\n\r\n        this._info.pokemon.moves.forEach((move) => {\r\n            \r\n            move.version_group_details.forEach((group) => {\r\n\r\n                let gameGroupName = capitalizeAllWords(replaceAll(group.version_group.name, '-', ' '));\r\n                let name = capitalizeAllWords(replaceAll(move.move.name, '-', ' '));\r\n                moveNames[gameGroupName] = moveNames[gameGroupName] || [];\r\n\r\n                if(!moveNames[gameGroupName].includes(name)) {\r\n                    \r\n                    let method = capitalizeAllWords(replaceAll(group.move_learn_method.name, '-', ' '));\r\n\r\n                    sorted[gameGroupName] = sorted[gameGroupName] || {};\r\n                    sorted[gameGroupName][method] = sorted[gameGroupName][method] || [];\r\n                    sorted[gameGroupName][method].push({name});\r\n                    moveNames[gameGroupName].push(name);\r\n                }\r\n\r\n            });\r\n        });\r\n\r\n        Object.keys(sorted).forEach((group) => {\r\n            if(!sorted[group][\"Level Up\"]) return;\r\n\r\n            sorted[group][\"Level Up\"].sort((a, b) => {\r\n                return a.level - b.level;\r\n            })\r\n        });\r\n\r\n        return sorted;\r\n    }\r\n\r\n    getPreEvolution() {\r\n        let url_base = \"https://pokeapi.co/api/v2/pokemon-species/\"\r\n\r\n        if(this.hasPreEvolution()) {\r\n            let name = this._info.species.evolves_from_species.name;\r\n            let id = +this._info.species.evolves_from_species.url.split(url_base)[1].split('/')[0];\r\n            let img = this.getImage(id);\r\n\r\n            return {name, id, img};\r\n        }\r\n\r\n        return {name: '', id: 0, img: ''};\r\n    }\r\n\r\n    getEvolutions() {\r\n        let thisPokemon;\r\n        \r\n        function loop(root, name) {\r\n\r\n            if(name === root.species.name) {\r\n                thisPokemon = root;\r\n                return;\r\n            } else {\r\n                root.evolves_to.forEach((v) => {\r\n                    loop(v, name);\r\n                });\r\n            }\r\n        }\r\n\r\n        loop(this._info.evolutionLine.chain, this._info.species.name);\r\n\r\n        if(thisPokemon.evolves_to.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        return thisPokemon.evolves_to.map((v) => {\r\n            let url_base = \"https://pokeapi.co/api/v2/pokemon-species/\";\r\n\r\n            let name = v.species.name;\r\n            let id = +v.species.url.split(url_base)[1].split('/')[0];\r\n            let img = this.getImage(id);\r\n\r\n            return {name, id, img};\r\n        });\r\n    }\r\n\r\n    getEvolutionTriggers() {\r\n        let methodByName = {};\r\n\r\n        function loop(root) {\r\n            methodByName[root.species.name] = [];\r\n\r\n            if(root.evolution_details.length > 0) {\r\n                Object.keys(root.evolution_details[0]).forEach((v) => {\r\n                    let p = root.evolution_details[0][v];\r\n                    let text = '';\r\n\r\n                    function pName(path = p.name) {\r\n                        return capitalizeAllWords(replaceAll(path, '-', ' '));\r\n                    }\r\n\r\n                    if(!(p === null || p === false || p === '')) {\r\n                        switch(v) {\r\n                            case 'gender': \r\n                            let gender = p === 1 ? 'female' : 'male';\r\n                            text = `Must be ${gender}.`;\r\n                            break;\r\n\r\n                            case 'held_item':\r\n                            text = `Must be holding ${pName()}.`;\r\n                            break;\r\n\r\n                            case 'item':\r\n                            text = `Must use ${pName()}.`;\r\n                            break;\r\n\r\n                            case 'known_move':\r\n                            text = `Must know the move: ${pName()}.`;\r\n                            break;\r\n\r\n                            case 'known_move_type':\r\n                            text = `Must know a ${pName()}-Type move.`;\r\n                            break;\r\n\r\n                            case 'location':\r\n                            text = `Must be at ${pName()}.`;\r\n                            break;\r\n\r\n                            case 'min_affection':\r\n                            text = `Must have at least ${p} affection points.`;\r\n                            break;\r\n\r\n                            case 'min_beauty':\r\n                            text = `Must have at least ${p} beauty points.`;\r\n                            break;\r\n\r\n                            case 'min_happiness':\r\n                            text = `Must have at least ${p} happiness points.`;\r\n                            break;\r\n\r\n                            case 'min_level':\r\n                            text = `Must be at least level ${p}.`;\r\n                            break;\r\n\r\n                            case 'needs_overworld_rain':\r\n                            text = `Must be raining.`;\r\n                            break;\r\n\r\n                            case 'party_species':\r\n                            text = `Must have ${useAorAn(pName())} ${pName()} in your party.`;\r\n                            break;\r\n\r\n                            case 'party_type':\r\n                            text = `Must have ${useAorAn(pName())} ${pName()}-Type Pokemon in your party.`;\r\n                            break;\r\n\r\n                            case 'relative_physical_stats':\r\n                            switch(p) {\r\n                                case -1:\r\n                                text = `Defense must be higher than attack.`;\r\n                                break;\r\n\r\n                                case 0:\r\n                                text = `Attack and defense must be equal.`;\r\n                                break;\r\n\r\n                                case 1:\r\n                                text = `Attack must be higher than defense.`;\r\n                                break;\r\n                            }\r\n                            break;\r\n\r\n                            case 'time_of_day':\r\n                            text = `Must be during the ${p}.`;\r\n                            break;\r\n\r\n                            case 'trade_species':\r\n                            text = `Must be traded by ${useAorAn(pName())} ${pName()}.`;\r\n                            break;\r\n\r\n                            case 'turn_upside_down':\r\n                            text = `Must turn the device upside down.`;\r\n                            break;\r\n\r\n                            case 'trigger':\r\n                            let trigger = '';\r\n\r\n                            switch (p.name) {\r\n                                case 'level-up':\r\n                                trigger = 'leveling up the pokemon';\r\n                                break;\r\n\r\n                                case 'use-item':\r\n                                trigger = 'using the specified item on the pokemon';\r\n                                break;\r\n\r\n                                case 'trade':\r\n                                trigger = 'trading this pokemon with another trainer'\r\n                                break;\r\n\r\n                                default:\r\n                                trigger = pName();\r\n                                break;\r\n                            }\r\n\r\n                            text = `The evolution is triggered by ${trigger}.`;\r\n                            break;\r\n\r\n                        }\r\n                        methodByName[root.species.name].push(text);\r\n                    }\r\n                });\r\n            }\r\n\r\n            root.evolves_to.forEach((v) => {\r\n                loop(v);\r\n            });\r\n        }\r\n\r\n        loop(this._info.evolutionLine.chain, this._info.pokemon.name);\r\n\r\n        return methodByName;\r\n    }\r\n\r\n    hasPreEvolution() {\r\n        return !!this._info.species.evolves_from_species;\r\n    }\r\n\r\n    hasEvolution() {\r\n        return this.getEvolutions().length > 0;\r\n    }\r\n\r\n\r\n}","//================================================================================\r\n// External:                                                                      \r\n//================================================================================\r\nimport superagent from 'superagent';\r\n\r\n//================================================================================\r\n// Components:                                                                    \r\n//================================================================================\r\nimport MF from '../Utils/MathFunctions.js';\r\n\r\n//================================================================================\r\n// Classes:\r\n//================================================================================\r\nimport Pokemon from '../Classes/Pokemon.js';\r\n\r\n//================================================================================\r\n// Consts and Vars:                                                               \r\n//================================================================================\r\nconst base_url = 'https://pokeapi.co/api/v2/';\r\nconst pokemon_url = 'pokemon/';\r\nconst species_url = 'pokemon-species/';\r\nconst evolution_url = 'evolution-chain/';\r\nconst last_pokemon = 807;\r\n\r\n//================================================================================\r\n// Functions:                                                                     \r\n//================================================================================\r\nexport function getPokemon(pokemonId, onStart = () => {}, onSuccess = () => {}, onError = () => {}) {\r\n    onStart();\r\n\r\n    let pokemon, species;\r\n\r\n    Promise.all([superagent.get(base_url + pokemon_url + pokemonId), superagent.get(base_url + species_url + pokemonId)])\r\n    .then(([pokemonRes, speciesRes]) => {\r\n        pokemon = pokemonRes.body;\r\n        species = speciesRes.body;\r\n        console.log(pokemon, species);\r\n        return superagent.get(species.evolution_chain.url);\r\n    })\r\n    .then((res) => {\r\n        let evolutionLine = res.body;\r\n        console.log({evolutionLine});\r\n        onSuccess(new Pokemon({pokemon, species, evolutionLine}));\r\n    })\r\n    .catch((err) => {\r\n        onError(err.statusCode);\r\n    });\r\n}\r\n\r\n/*export function getRandomPokémon(onSuccess) {\r\n    let rndm = MF.getRandomNumberBetweenRangeInclusive(1, last_pokemon);\r\n    getPokemon(rndm, onSuccess);\r\n}*/","import './Pokedex.css';\r\n\r\n//================================================================================\r\n// External:                                                                      \r\n//================================================================================\r\nimport React, { useState } from 'react';\r\n\r\n//================================================================================\r\n// Components:                                                                    \r\n//================================================================================\r\nimport SearchBar from '../Components/SearchBar.js';\r\nimport DropdownInput from '../Components/DropdownInput.js';\r\nimport infoBox from '../Components/InfoBox.js';\r\n\r\n//================================================================================\r\n// Services:                                                                      \r\n//================================================================================\r\nimport { getPokemon } from '../Services/PokemonAPI.js';\r\n\r\n//================================================================================\r\n// Utils:                                                                         \r\n//================================================================================\r\nimport { capitalizeString, replaceAll, capitalizeAllWords } from '../Utils/StringFunctions.js';\r\nimport InfoBox from '../Components/InfoBox.js';\r\n\r\nexport default function Pokedex() {\r\n    const defaultPokemonState = { \r\n        name: '', \r\n        image: '', \r\n        entries: [], \r\n        moves: {}, \r\n        hasPreEvolution: false, \r\n        hasEvolution: false, \r\n        evolution: [],\r\n        types: [],\r\n        evolution_method: {},\r\n        stats: [],\r\n        minor: {}\r\n    }\r\n    const [pokemonInfo, set_pokemonInfo] = useState(defaultPokemonState);\r\n    const [gameSelectValue, set_gameSelectValue] = useState('');\r\n    const [evolutionNav, set_evolutionNav] = useState(0);\r\n    const [isLoading, set_isLoading] = useState(false);\r\n    const [hasError, set_hasError] = useState(false);\r\n\r\n    function searchPokemon(searchValue) {\r\n        getPokemon(\r\n        replaceAll(searchValue.toLowerCase(), ' ', '-'), \r\n        () => {\r\n            set_isLoading(true);\r\n            set_hasError(false);\r\n        }, \r\n        (data) => {\r\n            set_pokemonInfo(defaultPokemonState);\r\n            set_evolutionNav(0);\r\n\r\n            console.log(data);\r\n\r\n            set_pokemonInfo({ \r\n                name: data.getDisplayName(), \r\n                image: data.getImage(), \r\n                entries: data.getAllPokedexEntries(), \r\n                moves: data.getMoves(), \r\n                hasPreEvolution: data.hasPreEvolution(), \r\n                hasEvolution: data.hasEvolution(), \r\n                preEvolution: data.getPreEvolution(), \r\n                evolution: data.getEvolutions(), \r\n                types: data.getTypes(), \r\n                evolution_method: data.getEvolutionTriggers(),\r\n                stats: data.getStats(),\r\n                minor: {\r\n                    height: (data._info.pokemon.height / 10) + ' m',\r\n                    weight: (data._info.pokemon.weight / 10) + ' kg',\r\n                    shape: capitalizeAllWords(replaceAll(data._info.species.shape.name, '-', ' ')),\r\n                    generation: capitalizeAllWords(replaceAll(data._info.species.generation.name, '-', ' ')),\r\n                    habitat: !(data._info.species.habitat === null) ? capitalizeAllWords(replaceAll(data._info.species.habitat.name, '-', ' ')) : null,\r\n                }\r\n            });\r\n\r\n            set_isLoading(false);\r\n        },\r\n        (err) => {\r\n            set_isLoading(false);\r\n            set_hasError(true);\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"Pokedex\">\r\n                {\r\n                    // Pokemon Basic Info:\r\n                }\r\n                { pokemonInfo.name !== '' && !isLoading && !hasError ?\r\n                <div className='pokemonBasic'>    \r\n                    <h1 className='pokemonName'>{pokemonInfo.name}</h1>\r\n                    <div className='imageBox'>\r\n                        <img src={pokemonInfo.image} alt={pokemonInfo.name}/>\r\n                        <div className={pokemonInfo.types.length > 1 ? 'twoTypes' : 'oneType'}>\r\n                        {\r\n                            pokemonInfo.types.map((v, i) => {\r\n                                return (\r\n                                    <img src={v.img} alt={v.name} key={`${v.name}_${i}`}></img>\r\n                                )\r\n                            })\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                    <div className='flavorTextArea'>\r\n                        <div className='flavorTexts'>\r\n                            {pokemonInfo.entries.map((v, i) => <p key={`flavor_text_${i}`}>{v}</p>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                : null}\r\n\r\n                {\r\n                    // Pokemon Other Info:\r\n                }\r\n\r\n                {pokemonInfo.name !== '' && !isLoading && !hasError ? \r\n                    <div className='pokemonOtherInfo'>\r\n\r\n                        <InfoBox \r\n                        title='Base Stats:'\r\n                        content={\r\n                            <div className='stats'>\r\n                                <table className='statsTable'>\r\n                                <tbody>\r\n                                {pokemonInfo.stats.map((v) => {\r\n                                    return (\r\n                                        <tr key={v.name + '_stat'}>\r\n                                            <th className='statName'>{v.name}</th>\r\n                                            <th className='statVal'>{v.value}</th>\r\n                                        </tr>\r\n                                    ) \r\n                                })}\r\n                                </tbody>\r\n                                </table>\r\n                            </div> \r\n                        }\r\n                        />\r\n\r\n                        <InfoBox \r\n                        title='Pokemon Info:'\r\n                        content={\r\n                            <div className='pokemonDetails'>\r\n                                <table className='detailsTable'>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th className='statName'>{pokemonInfo.types.length === 1 ? \"Type:\" : \"Types:\"}</th>\r\n                                        <th className='statVal'>{pokemonInfo.types.length === 1 ? \r\n                                        capitalizeString(pokemonInfo.types[0].name) : \r\n                                        capitalizeString(pokemonInfo.types[0].name) + ' & ' + capitalizeString(pokemonInfo.types[1].name)}\r\n                                        </th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className='statName'>Height:</th>\r\n                                        <th className='statVal'>{pokemonInfo.minor.height}</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className='statName'>Weight:</th>\r\n                                        <th className='statVal'>{pokemonInfo.minor.weight}</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className='statName'>Shape:</th>\r\n                                        <th className='statVal'>{pokemonInfo.minor.shape}</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className='statName'>Generation:</th>\r\n                                        <th className='statVal'>{pokemonInfo.minor.generation}</th>\r\n                                    </tr>\r\n                                    {pokemonInfo.minor.habita === null ?\r\n                                    <tr> \r\n                                        <th className='statName'>Habitat:</th>\r\n                                        <th className='statVal'>{pokemonInfo.minor.habitat}</th>\r\n                                    </tr>\r\n                                    : null}\r\n                                </tbody>\r\n                                </table>\r\n                            </div> \r\n                        }\r\n                        />\r\n\r\n                        {pokemonInfo.hasPreEvolution ? \r\n                        <InfoBox \r\n                        title='Evolves From:'\r\n                        content={(\r\n                            <div className='preEvolution'>\r\n                                <h4>{`${capitalizeString(pokemonInfo.preEvolution.name)} (${pokemonInfo.preEvolution.id})`}</h4>\r\n                                <div className='imageBox'>\r\n                                    <img src={pokemonInfo.preEvolution.img} alt={pokemonInfo.preEvolution.name}/>\r\n                                </div>\r\n                                <button onClick={() => {searchPokemon(pokemonInfo.preEvolution.id.toString())}}>View More</button>\r\n                            </div>\r\n                        )}\r\n                        className={!pokemonInfo.hasEvolution ? 'doubleSpace' : ''}\r\n                        />\r\n                        : null}\r\n\r\n                        {pokemonInfo.hasEvolution ? \r\n                        <InfoBox \r\n                        title='Evolves To:'\r\n                        content={(\r\n                            <div className='evolution'>\r\n                                {pokemonInfo.evolution.length > 1 ? \r\n                                <button \r\n                                className={evolutionNav > 0 ? 'navButton navButtonActive' : 'navButton navButtonInactive'}\r\n                                onClick={evolutionNav > 0 ?\r\n                                () => {\r\n                                    set_evolutionNav(evolutionNav - 1);\r\n                                }\r\n                                : () => {}}\r\n                                >{'<'}</button> \r\n                                : null}\r\n\r\n                                <div className='evolutionContent'>\r\n                                    <h4>{`${capitalizeString(pokemonInfo.evolution[evolutionNav].name)} (${pokemonInfo.evolution[evolutionNav].id})`}</h4>\r\n                                    <div className='imageBox'>\r\n                                        <img src={pokemonInfo.evolution[evolutionNav].img} alt={pokemonInfo.evolution[evolutionNav].name}/>\r\n                                    </div>\r\n                                    <button onClick={() => {searchPokemon(pokemonInfo.evolution[evolutionNav].id.toString())}}>View More</button>\r\n                                </div>\r\n                                \r\n                                {pokemonInfo.evolution.length > 1 ? \r\n                                <button \r\n                                className={evolutionNav < pokemonInfo.evolution.length - 1 ? 'navButton navButtonActive' : 'navButton navButtonInactive'}\r\n                                onClick={evolutionNav < pokemonInfo.evolution.length - 1 ?\r\n                                () => {\r\n                                    set_evolutionNav(evolutionNav + 1);\r\n                                }\r\n                                : () => {}}\r\n                                >{'>'}</button> \r\n                                : null}\r\n                            </div>\r\n                        )}\r\n                        className={!pokemonInfo.hasPreEvolution ? 'doubleSpace' : ''}\r\n                        />\r\n                        : null}\r\n\r\n                        {pokemonInfo.hasEvolution ? \r\n                        <InfoBox \r\n                        title='How To Evolve:'\r\n                        content={(\r\n                            <div className='evolutionGuide'>\r\n                                {pokemonInfo.evolution.length > 1 ? \r\n                                <button \r\n                                className={evolutionNav > 0 ? 'navButton navButtonActive' : 'navButton navButtonInactive'}\r\n                                onClick={evolutionNav > 0 ?\r\n                                () => {\r\n                                    set_evolutionNav(evolutionNav - 1);\r\n                                }\r\n                                : () => {}}\r\n                                >{'<'}</button> \r\n                                : null}\r\n\r\n                                <div className='evolutionGuideContent'>\r\n                                    <h4>{\r\n                                    `${capitalizeAllWords(pokemonInfo.name.split(' ').slice(0, -1).join(' '))} > \r\n                                    ${capitalizeAllWords(pokemonInfo.evolution[evolutionNav].name)}`\r\n                                    }</h4>\r\n                                    <div className='evolutionMethods'>\r\n                                        {\r\n                                            pokemonInfo.evolution_method[pokemonInfo.evolution[evolutionNav].name.toLowerCase()].map((v, i) => {\r\n                                                return <p key={`evo_guide_${i}`}>{v}</p>\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {pokemonInfo.evolution.length > 1 ? \r\n                                <button \r\n                                className={evolutionNav < pokemonInfo.evolution.length - 1 ? 'navButton navButtonActive' : 'navButton navButtonInactive'}\r\n                                onClick={evolutionNav < pokemonInfo.evolution.length - 1 ?\r\n                                () => {\r\n                                    set_evolutionNav(evolutionNav + 1);\r\n                                }\r\n                                : () => {}}\r\n                                >{'>'}</button> \r\n                                : null}\r\n                            </div>\r\n                        )}\r\n                        className='doubleSpace'\r\n                        />\r\n                        : null}\r\n                    </div>\r\n                : null}\r\n\r\n                {\r\n                    //Pokemon Move List:\r\n                }\r\n\r\n                { pokemonInfo.name !== '' && !isLoading && !hasError ?\r\n                <div className='moveList'>\r\n                    <div className='moveNavigation'>\r\n                        <DropdownInput \r\n                            label='Game'\r\n                            keyPrefix='game_id'\r\n                            setValue={set_gameSelectValue}\r\n                            value={gameSelectValue}\r\n                            choices={Object.keys(pokemonInfo.moves)}\r\n                        />\r\n                    </div>\r\n                    { gameSelectValue !== '' && !!pokemonInfo.moves[gameSelectValue] ?\r\n                    <div className='moves'>\r\n                    {\r\n                    Object.keys(pokemonInfo.moves[gameSelectValue]).map((v, i) => {\r\n                        if(v === \"Level Up\") {\r\n                            return (\r\n                                <div className='moveCategory' key={`${replaceAll(v.toLowerCase(), ' ', '-')}_${i}`}>\r\n                                    <h2>{v}</h2>\r\n                                    {\r\n                                        pokemonInfo.moves[gameSelectValue][v].map((v, i) => {\r\n                                            return (\r\n                                                <div className='moveBox' key={`${replaceAll(v.name.toLowerCase(), ' ', '_')}_${i}`}>\r\n                                                    {v.level > 0 ?\r\n                                                    <div className='levelBox'>\r\n                                                        <p>{v.level}</p>\r\n                                                    </div>\r\n                                                    : null}\r\n                                                    <p>{v.name}</p>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n\r\n                {\r\n                    Object.keys(pokemonInfo.moves[gameSelectValue]).map((v, i) => {\r\n                        if(v !== \"Level Up\") {\r\n                            return (\r\n                                <div className='moveCategory' key={`${replaceAll(v.toLowerCase(), ' ', '-')}_${i}`}>\r\n                                    <h2>{v}</h2>\r\n                                    {\r\n                                        pokemonInfo.moves[gameSelectValue][v].map((v, i) => {\r\n                                            return (\r\n                                                <div className='moveBox' key={`${replaceAll(v.name.toLowerCase(), ' ', '_')}_${i}`}>\r\n                                                    <p>{v.name}</p>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n                    </div>\r\n                    : null }\r\n                </div>\r\n                : null}\r\n            \r\n\r\n            {\r\n                // Pokedex Search Bar:\r\n            }\r\n\r\n            { isLoading ?\r\n            <div className='loading'>\r\n                <h1>Loading...</h1>\r\n            </div>\r\n            : null}\r\n\r\n            { hasError ?\r\n            <div className='error'>\r\n                <h1>Oops, couldn't find that Pokemon.</h1>\r\n            </div>\r\n            : null}\r\n\r\n            <div className='searchBarArea'>\r\n                <SearchBar \r\n                label='Type the Pokemon name or number'\r\n                buttonText=\"Search\"\r\n                onclick={searchPokemon}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","//================================================================================\n// External:\n//================================================================================\nimport React from 'react';\n\n//================================================================================\n// Pages:                                                                         \n//================================================================================\nimport Pokedex from './Pages/Pokedex.js';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Pokedex />\n    </div>\n  );\n}\n\n//================================================================================\n// Exports:                                                                       \n//================================================================================\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}